import 'package:dasha/providers/auth_provider.dart';
import 'package:dasha/providers/register_form_provider.dart';
import 'package:email_validator/email_validator.dart';
import 'package:flutter/material.dart';

import 'package:dasha/router/router.dart';

import 'package:dasha/ui/inputs/custom_inputs.dart';
import 'package:dasha/ui/buttons/custom_outlined_button.dart';
import 'package:dasha/ui/buttons/link_text.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

class RegisterView extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (_) => RegisterFormProvider(),
      child: Builder(builder: (context) {
        final screenWidth = MediaQuery.of(context).size.width;
        final registerFormProvider =
            Provider.of<RegisterFormProvider>(context, listen: false);

        return Container(
          color: Colors.red,
          margin: EdgeInsets.only(top: 10),
          padding: EdgeInsets.symmetric(horizontal: 10),
          child: Center(
            child: ConstrainedBox(
              constraints: BoxConstraints(maxWidth: 370),
              child: SingleChildScrollView(
                child: Form(
                  autovalidateMode: AutovalidateMode.always,
                  key: registerFormProvider.formKey,
                  child: Column(
                    children: [
                // Nombre de la marca
                TextFormField(
                  onChanged: ( value ) => registerFormProvider.brand = value,
                      validator: ( value ) {
                        if ( value == null || value.isEmpty ) return 'El nombre de la Empresa/Marca es obligatario';
                        return null;
                  },
                  style: TextStyle( color: Colors.white ),
                  decoration: CustomInputs.loginInputDecoration(
                    hint: 'Ingrese el nombre de su empresa o marca',
                    label: 'Empresa o Marca',
                    icon: Icons.store
                  ),
                ),

                SizedBox( height: 20 ),

                // Nombre de la sucursal
                TextFormField(
                  onChanged: ( value ) => registerFormProvider.branch = value,
                      validator: ( value ) {
                        if ( value == null || value.isEmpty ) return 'El nombre de la Sucursal es obligatario';
                        return null;
                  },
                  style: TextStyle( color: Colors.white ),
                  decoration: CustomInputs.loginInputDecoration(
                    hint: 'Ingrese el nombre de su sucursal',
                    label: 'Sucursal',
                    icon: Icons.location_on
                  ),
                ),

                SizedBox( height: 20 ),

                if (screenWidth > 1000) 
                  Row(
                    children: [
                      Expanded(
                        child: TextFormField(
                          onChanged: (value) => registerFormProvider.firstName = value,
                          validator: (value) {
                            if (value == null || value.isEmpty) return 'El nombre es obligatorio';
                            return null;
                          },
                          style: TextStyle(color: Colors.white),
                          decoration: CustomInputs.loginInputDecoration(
                            hint: 'Ingrese su(s) nombre(s)',
                            label: 'Nombre(s)',
                            icon: Icons.account_circle,
                          ),
                        ),
                      ),
                      SizedBox(width: 20),
                      Expanded(
                        child: TextFormField(
                          onChanged: (value) => registerFormProvider.lastName = value,
                          validator: (value) {
                            if (value == null || value.isEmpty) return 'El apellido es obligatorio';
                            return null;
                          },
                          style: TextStyle(color: Colors.white),
                          decoration: CustomInputs.loginInputDecoration(
                            hint: 'Ingrese su(s) apellido(s)',
                            label: 'Apellido(s)',
                            icon: Icons.recent_actors,
                          ),
                        ),
                      ),
                    ],
                  )
                else ...[
                  TextFormField(
                    onChanged: (value) => registerFormProvider.firstName = value,
                    validator: (value) {
                      if (value == null || value.isEmpty) return 'El nombre es obligatorio';
                      return null;
                    },
                    style: TextStyle(color: Colors.white),
                    decoration: CustomInputs.loginInputDecoration(
                      hint: 'Ingrese su(s) nombre(s)',
                      label: 'Nombre(s)',
                      icon: Icons.account_circle,
                    ),
                  ),
                  SizedBox(height: 20),
                  TextFormField(
                    onChanged: (value) => registerFormProvider.lastName = value,
                    validator: (value) {
                      if (value == null || value.isEmpty) return 'El apellido es obligatorio';
                      return null;
                    },
                    style: TextStyle(color: Colors.white),
                    decoration: CustomInputs.loginInputDecoration(
                      hint: 'Ingrese su(s) apellido(s)',
                      label: 'Apellido(s)',
                      icon: Icons.recent_actors,
                    ),
                  ),
                ],
                    
                    SizedBox(height: 20),

                    // Email
                    TextFormField(
                      onChanged: ( value ) => registerFormProvider.email = value,
                      validator: ( value ) {
                        if( !EmailValidator.validate(value ?? '') ) return 'Email no válido';
                        return null;
                      },
                      style: TextStyle( color: Colors.white ),
                      decoration: CustomInputs.loginInputDecoration(
                        hint: 'Ingrese su correo',
                        label: 'Email',
                        icon: Icons.email_outlined
                      ),
                    ),

                    SizedBox( height: 20 ),

                    // Password
                    TextFormField(
                      onChanged: ( value ) => registerFormProvider.password = value,
                      validator: ( value ) {
                        if ( value == null || value.isEmpty ) return 'Ingrese su contraseña';
                        if ( value.length < 6 ) return 'La contraseña debe de ser de 6 caracteres';

                        return null; // Válido
                      },
                      obscureText: true,
                      style: TextStyle( color: Colors.white ),
                      decoration: CustomInputs.loginInputDecoration(
                        hint: '*********',
                        label: 'Contraseña',
                        icon: Icons.lock_outline_rounded
                      ),
                    ),
                    
                    SizedBox( height: 20 ),
                    CustomOutlinedButton(
                      onPressed: () {

                        final validForm = registerFormProvider.validateForm();
                        
                        if ( !validForm ) return;

                        final authProvider = Provider.of<AuthProvider>(context, listen: false);
                        authProvider.register(
                          registerFormProvider.brand,
                          registerFormProvider.branch,
                          registerFormProvider.firstName,
                          registerFormProvider.lastName,
                          registerFormProvider.email, 
                          registerFormProvider.password
                        ); 

                      }, 
                      text: 'Crear cuenta',
                    ),


                    SizedBox( height: 20 ),
                    LinkText(
                      text: 'Ir al login',
                      onPressed: () {
                        Navigator.pushNamed(context, Flurorouter.loginRoute );
                      },
                    ),
                    ],
                  ),
                ),
              ),
            ),
          ),
        );
      }),
    );
  }
}
